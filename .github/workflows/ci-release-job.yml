# This job triggers automatically when a tag is created from the branch
# Its purpose is to create and archive WFLY patch as zip file and to test it
name: Weld Release

on:
  push:
    tags:
      - '*'

jobs:
  build-jdk11:
    name: "Create Patch file"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Weld Core repo
        uses: actions/checkout@v2
        with:
          path: core
      # TODO not used ATM; if we try to build dist here, the artifacts wouldn't be signed
      - name: Checkout Weld dist repo
        uses: actions/checkout@v2
        with:
          repository: weld/dist
          path: dist
      - name: Set up JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m")"
        shell: bash
      - name: Cache Maven Repository
        id: cache-maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: q2maven-${{ steps.get-date.outputs.date }}
      - name: Build Weld SNAPSHOT
        run: mvn clean install -Ddist -DskipTests -B -V -f core/pom.xml
      - name: Export env variables
        run: |
          echo "WELD_VERSION=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec -f core/pom.xml)" >> $GITHUB_ENV
          echo "WFLY_VERSION=$(mvn help:evaluate -Dexpression=wildfly.download.version -q -DforceStdout -f core/jboss-as/pom.xml)" >> $GITHUB_ENV
      # TODO we should figure out why patch building doesn't work with 11+
      - name: Set up JDK 8 for patch building
        uses: actions/setup-java@v1.4.3
        with:
          # done with JDK 8 because WFLY patch building utilities don't work with 11
          java-version: 8
      - name: Create WFLY patch
        run: mvn clean package -Pdownload-wfly,update-jboss-as,wfly-patch-gen -f core/jboss-as/pom.xml
      - name: Rename patch
        run: |
          cd core/jboss-as/target
          mv patch.zip $GITHUB_WORKSPACE/wildfly-$WFLY_VERSION-weld-$WELD_VERSION-patch.zip
      - name: Persist WildFly patch
        uses: actions/upload-artifact@v2
        with:
          name: wildfly-patch
          path: wildfly-${{ env.WFLY_VERSION }}-weld-${{ env.WELD_VERSION }}-patch.zip
      - name: Get WFLY and patch it
        run: |
          mvn clean package -Pdownload-wfly -f core/jboss-as/pom.xml
          mkdir wflyServer
          mv core/jboss-as/target/wildfly-original/*/* wflyServer
          cd wflyServer
          ./bin/jboss-cli.bat|sh --command="patch apply $GITHUB_WORKSPACE/wildfly-$WFLY_VERSION-weld-$WELD_VERSION-patch.zip"
      - name: Use Patched WFLY To Run Arq. Tests
        run: |
          export JBOSS_HOME=$GITHUB_WORKSPACE/wflyServer
          mvn clean verify -Dincontainer -f core/tests-arquillian/pom.xml
      - name: Delete Local Artifacts From Cache
        shell: bash
        run: rm -r ~/.m2/repository/org/jboss/weld*